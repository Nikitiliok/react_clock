{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","this","setInterval","date","setState","console","log","oldName","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","names","visible","prevState","randomName","Math","floor","random","length","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,GAAe,IAAIL,MAAOC,qBAEhC,EAAKK,SAAS,CAAEP,KAAMM,IAGtBE,QAAQC,IAAI,EAAKV,MAAMC,QACtB,OAfP,gCAkBE,SAAmBU,GACbA,EAAQC,OAASP,KAAKQ,MAAMD,MAE9BH,QAAQC,IAAR,qCAA0CC,EAAQC,KAAlD,eAA6DP,KAAKQ,MAAMD,SArB9E,kCAyBE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WA3BzB,oBA+BE,WACE,OACE,sBAAKW,UAAU,mBAAf,UACE,wCAEG,IACAV,KAAKQ,MAAMD,QAEd,qBACEG,UAAU,cACV,UAAQ,OAFV,SAIGV,KAAKL,MAAMC,cA3CtB,GAA2Be,IAAMC,WCApBC,EAAb,4MACElB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,KAHf,EAMEC,MAAQ,CAAC,IAAK,IAAK,IAAK,KAN1B,EAQEC,QAAU,WACR,EAAKd,UAAS,SAACe,GAAD,MACZ,CAAEJ,gBAAiBI,EAAUJ,oBAVnC,EAcEK,WAAa,WACP,EAAKxB,MAAMmB,gBACb,EAAKX,SAAS,CACZY,UAAW,EAAKC,MAAMI,KAAKC,MAAMD,KAAKE,SAAW,EAAKN,MAAMO,YAjBpE,4CAsBE,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBAEA,sBAAKA,UAAU,uBAAf,UACE,wBACEA,UAAU,uBACVc,KAAK,SACLC,QAASzB,KAAKiB,QAHhB,SAKGjB,KAAKL,MAAMmB,eAAiB,aAAe,eAG9C,wBACEJ,UAAU,uBACVc,KAAK,SACLC,QAASzB,KAAKmB,WAHhB,gCASDnB,KAAKL,MAAMmB,gBACV,cAAC,EAAD,CAAOP,KAAMP,KAAKL,MAAMoB,mBA9ClC,GAAyBJ,IAAMC,WCP/Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a22112e0.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: string,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: string = new Date().toLocaleTimeString();\n\n      this.setState({ time: date });\n\n      // eslint-disable-next-line\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(oldName: Props) {\n    if (oldName.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app__clock clock\">\n        <div>\n          Name:\n          {' '}\n          {this.props.name}\n        </div>\n        <div\n          className=\"clock__time\"\n          data-cy=\"time\"\n        >\n          {this.state.time}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: string,\n};\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: false,\n    clockName: 'A',\n  };\n\n  names = ['A', 'B', 'C', 'D'];\n\n  visible = (): void => {\n    this.setState((prevState) => (\n      { isClockVisible: !prevState.isClockVisible }\n    ));\n  };\n\n  randomName = (): void => {\n    if (this.state.isClockVisible) {\n      this.setState({\n        clockName: this.names[Math.floor(Math.random() * this.names.length)],\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">React clock</h1>\n\n        <div className=\"app__buttons buttons\">\n          <button\n            className=\"buttons__show button\"\n            type=\"button\"\n            onClick={this.visible}\n          >\n            {this.state.isClockVisible ? 'Hide Clock' : 'Show Clock'}\n          </button>\n\n          <button\n            className=\"buttons__name button\"\n            type=\"button\"\n            onClick={this.randomName}\n          >\n            Set random name\n          </button>\n        </div>\n\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}