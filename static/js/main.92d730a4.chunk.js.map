{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","x","Date","toLocaleTimeString","timerId","this","setInterval","date","setState","console","log","oldName","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","names","showClock","hideClock","randomName","Math","floor","random","length","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,GAAG,IAAIC,MAAOC,sBAFlB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,GAAe,IAAIL,MAAOC,qBAEhC,EAAKK,SAAS,CAAEP,EAAGM,IAGnBE,QAAQC,IAAI,EAAKV,MAAMC,KACtB,OAfP,gCAkBE,SAAmBU,GACbA,EAAQC,OAASP,KAAKQ,MAAMD,MAE9BH,QAAQC,IAAR,qCAA0CC,EAAQC,KAAlD,eAA6DP,KAAKQ,MAAMD,SArB9E,kCAyBE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,WA3BzB,oBA+BE,WACE,OACE,sBAAKW,UAAU,mBAAf,UACE,wCAEG,IACAV,KAAKQ,MAAMD,QAEd,qBACEG,UAAU,cACV,UAAQ,OAFV,SAIGV,KAAKL,MAAMC,WA3CtB,GAA2Be,IAAMC,WCApBC,EAAb,4MACElB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,KAHf,EAMEC,MAAQ,CAAC,IAAK,IAAK,IAAK,KAN1B,EAQEC,UAAY,WACV,EAAKd,SAAS,CAAEW,gBAAgB,KATpC,EAYEI,UAAY,WACV,EAAKf,SAAS,CAAEW,gBAAgB,KAbpC,EAgBEK,WAAa,WACX,EAAKhB,SAAS,CACZY,UAAW,EAAKC,MAAMI,KAAKC,MAAMD,KAAKE,SAAW,EAAKN,MAAMO,YAlBlE,4CAsBE,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBAEA,sBAAKA,UAAU,uBAAf,UACE,wBACEA,UAAU,uBACVc,KAAK,SACLC,QAASzB,KAAKiB,UAHhB,wBAQA,wBACEP,UAAU,uBACVc,KAAK,SACLC,QAASzB,KAAKkB,UAHhB,wBAQA,wBACER,UAAU,uBACVc,KAAK,SACLC,QAASzB,KAAKmB,WAHhB,gCASDnB,KAAKL,MAAMmB,gBACV,cAAC,EAAD,CAAOP,KAAMP,KAAKL,MAAMoB,mBAtDlC,GAAyBJ,IAAMC,WCP/Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.92d730a4.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  x: string,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    x: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: string = new Date().toLocaleTimeString();\n\n      this.setState({ x: date });\n\n      // eslint-disable-next-line\n      console.log(this.state.x);\n    }, 1000);\n  }\n\n  componentDidUpdate(oldName: Props) {\n    if (oldName.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app__clock clock\">\n        <div>\n          Name:\n          {' '}\n          {this.props.name}\n        </div>\n        <div\n          className=\"clock__time\"\n          data-cy=\"time\"\n        >\n          {this.state.x}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: string,\n};\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: false,\n    clockName: 'A',\n  };\n\n  names = ['A', 'B', 'C', 'D'];\n\n  showClock = (): void => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = (): void => {\n    this.setState({ isClockVisible: false });\n  };\n\n  randomName = (): void => {\n    this.setState({\n      clockName: this.names[Math.floor(Math.random() * this.names.length)],\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">React clock</h1>\n\n        <div className=\"app__buttons buttons\">\n          <button\n            className=\"buttons__show button\"\n            type=\"button\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n\n          <button\n            className=\"buttons__hide button\"\n            type=\"button\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            className=\"buttons__name button\"\n            type=\"button\"\n            onClick={this.randomName}\n          >\n            Set random name\n          </button>\n        </div>\n\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}